These are the commands to compile client and server programs:
gcc -Wall -o client client_tls.c -L/usr/lib -lssl -lcrypto
gcc -Wall -o server server_tls.c -L/usr/lib -lssl -lcrypto

Once the programs are compiled, you can run them in the following way:

./client <hostname> <portnum> <ca_cert> <ciphersuite>

- hostname is the IP address to which the client is trying to connect
- portnum is the number of the port on which the server is listening
- ca_cert is the path to the certificate of the CA that issued the server certificate
- ciphersuite is the list of ciphersuite that you want to enable for the handshake (must be separated by ":")
- num_thread is the number of client thread that you want to generate


./server <portnum> <cert_file> <key_file>

- portnum is the port number for the server
- cert_file is the path to certificate file for the server
- key_file is the path to the file that contains the private key of the server (corresponding to the public one in the certificate)

The results of the execution of the program client and other statistics computed on that data will be saved in a file named: tls1_2_results_<ciphersuite>_<num_thread>

The main folder contains also 2 sub-folder: ca_cert contains the certificate file of the CA that issued the certificate of the server, while server_cert contains the certificate and the private key of the server. These 2 folders and their content can be used to test the programs. The file "dh_param_2048.pem" has been generated by the command "openssl dhparam -out dh_param_2048.pem 2048" and contains additional DH-parameters for the server, that are used in case a DHE ciphersuite is selected by the client.
